// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ges_commande.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241226175725_Paiement")]
    partial class Paiement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Cours.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createat");

                    b.Property<double>("Solde")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updateat");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("userId");

                    b.ToTable("client");
                });

            modelBuilder.Entity("Cours.Models.Commande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createat");

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LivreurId")
                        .HasColumnType("int");

                    b.Property<double>("PrixTotal")
                        .HasColumnType("double");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updateat");

                    b.Property<int>("etat")
                        .HasColumnType("int");

                    b.Property<int>("paiementId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("LivreurId");

                    b.ToTable("commande");
                });

            modelBuilder.Entity("Cours.Models.DetailsCommande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createat");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updateat");

                    b.Property<int>("commandeID")
                        .HasColumnType("int");

                    b.Property<double>("prix")
                        .HasColumnType("double");

                    b.Property<int>("produitID")
                        .HasColumnType("int");

                    b.Property<int>("produitsId")
                        .HasColumnType("int");

                    b.Property<double>("qteCommande")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("commandeID");

                    b.HasIndex("produitsId");

                    b.ToTable("detailCommande");
                });

            modelBuilder.Entity("Cours.Models.Livreur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createat");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updateat");

                    b.HasKey("Id");

                    b.ToTable("livreur");
                });

            modelBuilder.Entity("Cours.Models.Paiements", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createat");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updateat");

                    b.Property<int>("commandeId")
                        .HasColumnType("int");

                    b.Property<bool>("reduction")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("typePaiement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("commandeId")
                        .IsUnique();

                    b.ToTable("paiement");
                });

            modelBuilder.Entity("Cours.Models.Produits", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createat");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("Prix")
                        .HasColumnType("double");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updateat");

                    b.HasKey("Id");

                    b.ToTable("produit");
                });

            modelBuilder.Entity("ges_commande.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createat");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("updateat");

                    b.Property<string>("login")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Cours.Models.Client", b =>
                {
                    b.HasOne("ges_commande.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Cours.Models.Commande", b =>
                {
                    b.HasOne("Cours.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cours.Models.Livreur", "livreur")
                        .WithMany()
                        .HasForeignKey("LivreurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("livreur");
                });

            modelBuilder.Entity("Cours.Models.DetailsCommande", b =>
                {
                    b.HasOne("Cours.Models.Commande", "commande")
                        .WithMany()
                        .HasForeignKey("commandeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cours.Models.Produits", "produits")
                        .WithMany()
                        .HasForeignKey("produitsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("commande");

                    b.Navigation("produits");
                });

            modelBuilder.Entity("Cours.Models.Paiements", b =>
                {
                    b.HasOne("Cours.Models.Commande", "commande")
                        .WithOne("paiements")
                        .HasForeignKey("Cours.Models.Paiements", "commandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("commande");
                });

            modelBuilder.Entity("Cours.Models.Commande", b =>
                {
                    b.Navigation("paiements")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
